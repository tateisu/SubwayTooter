[versions]
androidGradlePlugin = "8.13.0"
androidSvgAar = "1.4"
androidxActivity = "1.11.0"
androidxAnnotation = "1.9.1"
androidxAppcompat = "1.7.1"
androidxArchCoreTesting = "2.2.0"
androidxBrowser = "1.9.0"
androidxComposeBom = "2025.09.00"
androidxConstraintLayout = "2.2.1"
androidxCoreKtx = "1.17.0"
androidxCoreSplashscreen = "1.2.0-rc01"
androidxDrawerlayout = "1.2.0"
androidxEmoji2 = "1.6.0"
androidxExifInterface = "1.4.1"
androidxLifecycle = "2.9.3"
androidxMedia3 = "1.8.0"
androidxMedia3Effect = "1.8.0"
androidxMedia3Transformer = "1.8.0"
androidxPreference = "1.2.1"
androidxRecyclerView = "1.4.0"
androidxStartup = "1.2.0"
androidxTestCore = "1.7.0"
androidxTestEspressoCore = "3.7.0"
androidxTestExtJunit = "1.3.0"
androidxTestExtTruth = "1.7.0"
androidxTestOrchestrator = "1.6.1"
androidxTestRunner = "1.7.0"
androidxWork = "2.10.4"
apng4Android = "3.0.5"
bcprovJdk15on = "1.70"
conscryptAndroid = "2.5.3"
customQrGenerator = "1.6.2"
desugarJdk = "2.1.5"
detekt = "1.23.8"
draglistview = "1.7.3"
firebaseMessaging = "25.0.0"
# glideバージョン は zjupure/GlideWebpDecoder が対応しているものにすること
#noinspection NewerVersionAvailable
glide = "4.16.0"
googleFlexbox = "3.0.0"
googleMaterial = "1.13.0"
googleServices = "4.4.3"
junit = "4.13.2"
koinBom = "4.1.1"
kotlinCoroutinesOkhttp = "1.0"
kotlinxCoroutines = "1.10.2"
kotlinxCoroutinesGuava = "1.10.2"
kotlinxSerialization = "1.9.0"
ksp = "2.2.20-2.0.3" # kotlinバージョンに依存している
okhttp = "5.1.0"
otaliastudiosTranscoder = "0.11.2"
unifiedPushAndroidConnector = "2.1.1"
# zjupure/GlideWebpDecoder
webpDecoder = "2.7.4.16.0" # glideバージョンに依存している

# 以下は未使用に見えても削除してはいけない
# Composite build から参照しているかもしれない

# Javaの互換性
# org.gradle.api.JavaVersion.toVersion(...) に渡される
# 未使用に見えるが削除してはいけない。buildLogicから参照される
javaSourceCompatibility = "17"
javaTargetCompatibility = "17"

# Kotlinに指定するJvmTarget
kotlinJvmTarget = "17"

# Android Studio同梱のJavaツールチェインのバージョン
kotlinJvmToolchain = "21"

# KotlinとKotlin pluginのバージョン
kotlin = "2.2.20"

# android関連の指定
# 未使用に見えるが削除してはいけない。buildLogicから参照される
stBuildToolsVersion = "35.0.1"
stCompileSdkVersion = "35"
stTargetSdkVersion = "35"
stMinSdkVersion = "26"

[libraries]
androidsvg-aar = { module = "com.caverock:androidsvg-aar", version.ref = "androidSvgAar" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidxActivity" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidxAnnotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppcompat" }
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidxArchCoreTesting" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "androidxBrowser" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidxComposeBom" }
androidx-compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidxConstraintLayout" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCoreKtx" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidxCoreSplashscreen" }
androidx-drawerlayout = { module = "androidx.drawerlayout:drawerlayout", version.ref = "androidxDrawerlayout" }
androidx-emoji2 = { module = "androidx.emoji2:emoji2", version.ref = "androidxEmoji2" }
androidx-emoji2-bundled = { module = "androidx.emoji2:emoji2-bundled", version.ref = "androidxEmoji2" }
androidx-emoji2-views = { module = "androidx.emoji2:emoji2-views", version.ref = "androidxEmoji2" }
androidx-emoji2-views-helper = { module = "androidx.emoji2:emoji2-views-helper", version.ref = "androidxEmoji2" }
androidx-exifinterface = { module = "androidx.exifinterface:exifinterface", version.ref = "androidxExifInterface" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-media3-common = { module = "androidx.media3:media3-common", version.ref = "androidxMedia3" }
androidx-media3-datasource = { module = "androidx.media3:media3-datasource", version.ref = "androidxMedia3" }
androidx-media3-effect = { module = "androidx.media3:media3-effect", version.ref = "androidxMedia3Effect" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "androidxMedia3" }
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "androidxMedia3" }
androidx-media3-transformer = { module = "androidx.media3:media3-transformer", version.ref = "androidxMedia3Transformer" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "androidxMedia3" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "androidxPreference" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidxRecyclerView" }
androidx-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "androidxStartup" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTestCore" }
androidx-test-core-ktx = { module = "androidx.test:core-ktx", version.ref = "androidxTestCore" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidxTestEspressoCore" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExtJunit" }
androidx-test-ext-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxTestExtJunit" }
androidx-test-ext-truth = { module = "androidx.test.ext:truth", version.ref = "androidxTestExtTruth" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidxTestOrchestrator" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidxTestRunner" }
androidx-work-runtime = { module = "androidx.work:work-runtime", version.ref = "androidxWork" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidxWork" }
apng4Android = { module = "com.github.penfeizhou.android.animation:apng", version.ref = "apng4Android" }
bcprov-jdk15on = { module = "org.bouncycastle:bcprov-jdk15on", version.ref = "bcprovJdk15on" }
conscrypt-android = { module = "org.conscrypt:conscrypt-android", version.ref = "conscryptAndroid" }
custom-qr-generator = { module = "com.github.alexzhirkevich:custom-qr-generator", version.ref = "customQrGenerator" }

detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
draglistview = { module = "com.github.woxthebox:draglistview", version.ref = "draglistview" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging", version.ref = "firebaseMessaging" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }
google-flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "googleFlexbox" }
google-material = { module = "com.google.android.material:material", version.ref = "googleMaterial" }
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
junit = { module = "junit:junit", version.ref = "junit" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-android-compat = { module = "io.insert-koin:koin-android-compat" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager" }
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
kotlin-coroutines-okhttp = { module = "ru.gildor.coroutines:kotlin-coroutines-okhttp", version.ref = "kotlinCoroutinesOkhttp" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinxCoroutinesGuava" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-urlconnection = { module = "com.squareup.okhttp3:okhttp-urlconnection", version.ref = "okhttp" }
otaliastudios-transcoder = { module = "com.otaliastudios:transcoder", version.ref = "otaliastudiosTranscoder" }
unifiedpush-android-connector = { module = "com.github.UnifiedPush:android-connector", version.ref = "unifiedPushAndroidConnector" }
webpDecoder = { module = "com.github.zjupure:webpdecoder", version.ref = "webpDecoder" }

# 以下は未使用に見えるが削除してはいけない。buildLogicから参照される
desugar-jdk = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugarJdk" }

# 以下は build-logic で実装する gradlePlugin から参照されるライブラリ
gradlePlugin-android = { module= "com.android.tools.build:gradle", version.ref = "androidGradlePlugin"}
# gradlePlugin-jetbrainsCompose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "jetbrains-compose" }
# gradlePlugin-composeCompiler = { module = "org.jetbrains.kotlin.plugin.compose:org.jetbrains.kotlin.plugin.compose.gradle.plugin", version.ref = "kotlin" }
gradlePlugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
